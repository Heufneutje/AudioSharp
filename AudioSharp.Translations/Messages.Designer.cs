//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AudioSharp.Translations {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AudioSharp.Translations.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string GUICommonError {
            get {
                return ResourceManager.GetString("GUICommonError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This recording is already an MP3 file..
        /// </summary>
        public static string GUIConvertAlreadyMP3 {
            get {
                return ResourceManager.GetString("GUIConvertAlreadyMP3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while converting the WAV file:.
        /// </summary>
        public static string GUIConvertError {
            get {
                return ResourceManager.GetString("GUIConvertError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert.
        /// </summary>
        public static string GUIConvertTitle {
            get {
                return ResourceManager.GetString("GUIConvertTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you wish to delete this?.
        /// </summary>
        public static string GUIDefaultDelete {
            get {
                return ResourceManager.GetString("GUIDefaultDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string GUIDefaultDeleteTitle {
            get {
                return ResourceManager.GetString("GUIDefaultDeleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s no input device selected to record from..
        /// </summary>
        public static string GUIErrorInputDevice {
            get {
                return ResourceManager.GetString("GUIErrorInputDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input device.
        /// </summary>
        public static string GUIErrorInputDeviceTitle {
            get {
                return ResourceManager.GetString("GUIErrorInputDeviceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AudioSharp does not have permission to save a recording at that location..
        /// </summary>
        public static string GUIErrorNoWriteAccess {
            get {
                return ResourceManager.GetString("GUIErrorNoWriteAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No write access.
        /// </summary>
        public static string GUIErrorNoWriteAccessTitle {
            get {
                return ResourceManager.GetString("GUIErrorNoWriteAccessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected output file is invalid..
        /// </summary>
        public static string GUIErrorOutputFile {
            get {
                return ResourceManager.GetString("GUIErrorOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file.
        /// </summary>
        public static string GUIErrorOutputFileTitle {
            get {
                return ResourceManager.GetString("GUIErrorOutputFileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file was selected..
        /// </summary>
        public static string GUINoFileSelected {
            get {
                return ResourceManager.GetString("GUINoFileSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A recording with this name already exists. Would you like to overwrite it?.
        /// </summary>
        public static string GUIQuestionOverwriteRecording {
            get {
                return ResourceManager.GetString("GUIQuestionOverwriteRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording exists.
        /// </summary>
        public static string GUIQuestionOverwriteRecordingTitle {
            get {
                return ResourceManager.GetString("GUIQuestionOverwriteRecordingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A recording is currently in progress. Would you like to stop it?.
        /// </summary>
        public static string GUIStopRecording {
            get {
                return ResourceManager.GetString("GUIStopRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording in progress.
        /// </summary>
        public static string GUIStopRecordingTitle {
            get {
                return ResourceManager.GetString("GUIStopRecordingTitle", resourceCulture);
            }
        }
    }
}
